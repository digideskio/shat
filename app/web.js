// Generated by CoffeeScript 1.6.3
(function() {
  var app, connectAssets, everyauth, express, port, redis, redisClient, redisCloudURL, url, usersById;

  express = require("express");

  everyauth = require("everyauth");

  connectAssets = require("connect-assets");

  redis = require("redis");

  url = require("url");

  redisCloudURL = url.parse(process.env.REDISCLOUD_URL);

  redisClient = redis.createClient(redisCloudURL.port, redisCloudURL.hostname, {
    no_ready_check: true
  });

  redisClient.auth(redisCloudURL.auth.split(":")[1]);

  usersById = {};

  everyauth.everymodule.findUserById(function(id, callback) {
    return redisClient.hgetall("user_" + id, function(err, obj) {
      return callback(null, obj);
    });
  });

  everyauth.facebook.appId(process.env.FB_APP_ID).appSecret(process.env.FB_APP_SECRET).scope("email").fields("id,name,email,picture").findOrCreateUser(function(session, accessToken, accessTokenExtra, fbUserMetadata) {
    var promise;
    promise = this.Promise();
    redisClient.hgetall("user_" + fbUserMetadata.id, function(err, obj) {
      if (obj) {
        return promise.fulfill(obj);
      } else {
        redisClient.hmset("user_" + fbUserMetadata.id, fbUserMetadata);
        return promise.fulfill(fbUserMetadata);
      }
    });
    return promise;
  }).redirectPath('/');

  app = express();

  app.set("views", __dirname + "/../views");

  app.set("view engine", "jade");

  app.use(express.logger());

  app.use(express.bodyParser());

  app.use(express.cookieParser("foobie"));

  app.use(express.session());

  app.use(everyauth.middleware());

  app.use(connectAssets());

  app.use(express["static"](__dirname + "/../public"));

  app.get("/", function(req, res, params) {
    if (req.user) {
      res.render("main");
      console.log("user is " + (JSON.stringify(req.user)));
    } else {
      res.render("fblogin");
    }
    return void 0;
  });

  port = process.env.PORT || 5000;

  app.listen(port, function() {
    console.log("Listening on port " + port);
    return void 0;
  });

}).call(this);
